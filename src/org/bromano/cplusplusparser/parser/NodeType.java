package org.bromano.cplusplusparser.parser;

public enum NodeType {
    DECLARATION_SEQUENCE, FUNCTION_DEFINITION, DECLARATION, BLOCK_DECLARATION, EMPTY_DECLARATION, ATTIBUTE_SPECIFIER_SEQUENCE, ATTRIBUTE_SPECIFIER, ATTRIBUTE_LIST, ATTRIBUTE, ATTRIBUTE_TOKEN, ATTRIBUTE_SCOPED_TOKEN, ATTRIBUTE_NAMESPACE, ATTRIBUTE_ARGUMENT_CLAUSE, BALANCED_TOKEN, ALIGNMENT_SPECIFIER, TYPE_ID, ABSTRACT_DECLARATOR, PTR_ABSTRACT_DECLARATOR, PTR_OPERATOR, NESTED_NAME_SPECIFIER, NO_PTR_ABSTRACT_DECLARATOR, TYPE_SPECIFIER_SEQUENCE, TYPE_SPECIFIER, TRAILING_TYPE_SPECIFIER, CV_QUALIFIER, ELABORATED_TYPE_SPECIFIER, TYPE_NAME, ENUM_NAME, TYPEDEF_NAME, CLASS_KEY, TYPENAME_SPECIFIER, SIMPLE_TEMPLATE_ID, TEMPLATE_NAME, TEMPLATE_ARGUMENT_LIST, TEMPLATE_ARGUMENT, EXPRESSION, ASSIGNMENT_EXPRESSION, ASSIGNMENT_OPERATOR, CONSTANT_EXPRESSION, CONDITIONAL_EXPRESSION, LOGICAL_AND_EXPRESSION, INCLUSIVE_OR_EXPRESSION, EXCLUSIVE_OR_EXPRESSION, AND_EXPRESSION, EQUALITY_EXPRESSION, RELATIONAL_EXPRESSION, SHIFT_EXPRESSION, ADDITIVE_EXPRESSION, MULTIPLICATIVE_EXPRESSION, PM_EXPRESSION, CAST_EXPRESSION, UNARY_EXPRESSION, UNARY_OPERATOR, NOEXCEPT_EXPRESSION, NEW_TYPE_ID, NEW_DECLARATOR, NO_PTR_NEW_DECLARATOR, PARSE_NEW_PLACEMENT, EXPRESSION_LIST, INITIALIZER_LIST, NEW_INITIALIZER, INITIALIZER_CLAUSE, BRACED_INIT_LIST, POSTFIX_EXPRESSION, PRIMARY_EXPRESSION, ID_EXPRESSION, UNQUALIFIED_ID, QUALIFIED_ID, OPERATOR_FUNCTION_ID, OVERLOADABLE_OPERATOR, TEMPLATE_ID, LITERAL_OPERATOR_ID, CONVERSION_FUNCTION_ID, CONVERSION_TYPE_ID, CONVERSION_DECLARATOR, DECLTYPE_SPECIFIER, LAMBDA_EXPRESSION, LAMBDA_INTRODUCER, LAMBDA_CAPTURE, CAPTURE_DEFAULT, CAPTURE_LIST, CAPTURE, LAMBDA_DECLARATOR, TRAILING_RETURN_TYPE, EXCEPTION_SPECIFICATION, NOEXCEPT_SPECIFICATION, DYNAMIC_EXCEPTION_SPECIFICATION, TYPE_ID_LIST, PARAMETER_DECLARATION_CLAUSE, PARAMETER_DECLARATION_LIST, DECL_SPECIFIER_SEQUENCE, DECL_SPECIFIER, STORAGE_CLASS_SPECIFIER, FUNCTION_SPECIFIER, DECLARATOR, PARAMETERS_AND_QUALIFIERS, REF_SEQUENCE, REF_QUALIFIER, PARAMETER_DECLARATION, PSUEDO_DESTRUCTOR_NAME, PSUEDO_DESTRUCTOR, PSEUDO_DESTRUCTOR, PSEUDO_DESTRUCTOR_NAME, ENUM_SPECIFIER, ENUMERATOR_LIST, ENUMERATOR_DEFINITION, ENUMERATOR, ENUM_KEY, ENUM_HEAD, ENUM_BASE, NAMESPACE_NAME, ORIGINAL_NAMESPACE_NAME, TRANSLATION_UNIT, CLASS_SPECIFIER, MEMBER_SPECIFICATION, ACCESS_SPECIFIER, CLASS_HEAD, BASE_CLAUSE, BASE_SPECIFIER_LIST, BASE_SPECIFIER, BASE_TYPE_SPECIFIER, CLASS_OR_DECLTYPE, MEMBER_DECLARATION, MEMBER_DECLARATOR_LIST, MEMBER_DECLARATOR, VIRT_SPECIFIER_SEQUENCE, VIRT_SPECIFIER, USING_DECLARATION, STATIC_ASSERT_DECLARATION, TEMPLATE_DECLARATION, TEMPLATE_PARAMETER_LIST, TEMPLATE_PARAMETER, TYPE_PARAMETER, ALIAS_DECLARATION, FUNCTION_BODY, NOPTR_DECLARATOR, PTR_DECLARATOR, DECLARATOR_ID, CTOR_INITIALIZER, FUNCTION_TRY_BLOCK, HANDLER_SEQUENCE, HANDLER, EXCEPTION_DECLARATION, COMPOUND_STATEMENT, STATEMENT_SEQUENCE, STATEMENT, LABELED_STATEMENT, JUMP_STATEMENT, SELECTION_STATEMENT, CONDITION, EXPRESSION_STATEMENT, ITERATION_STATEMENT, FOR_INIT_STATEMENT, FOR_RANGE_DECLARATION, FOR_RANGE_INITIALIZER, DECLARATION_STATEMENT, OPAQUE_ENUM_DECLARATION, USING_DIRECTIVE, ASM_DEFINITION, SIMPLE_DECLARATION, INIT_DECLARATOR_LIST, INIT_DECLARATOR, INITIALIZER, BRACE_OR_EQUAL_INITIALIZER, EXPLICIT_INSTANTIATION, EXPLICIT_SPECIALIZATION, LINKAGE_SPEIFICATION, NAMESPACE_DEFIITION, NAMED_NAMESPACE_DEFINITION, NAMESPACE_BODY, ORIGINAL_NAMESPACE_DECLARATION, EXTENSION_NAMESPACE_DEFINITION, ATTIRBUTE_DECLARATION, TRAILING_TYPE_SPECIFIER_SEQUENCE, SIMPLE_TYPE_SPECIFIER, CLASS_NAME;

}
